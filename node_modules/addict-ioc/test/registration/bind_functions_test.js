'use strict';

const should = require('should');

const Container = require('./../../dist/commonjs').Container;

const container = new Container();

describe('Type Registration With Function Binding Test', () => {

  class TestType {

    testFunction() {
      return 'hello';
    }

  }

  const testTypeKey = 'bindFunctionsTestKey';

  beforeEach(() => {
    container.clear();
  });

  it('should configure a registration with an empty Array as default for functionsToBind', () => {

    container
      .register(testTypeKey, TestType)
      .bindFunctions();

    const registration = container.getRegistration(testTypeKey);
    const bindFunctionsSetting = registration.settings.functionsToBind;

    should(bindFunctionsSetting).be.an.Array();
    should(bindFunctionsSetting.length).be.equal(0);
  });

  it('should successfully register the given type with the given function name stored in functionsToBind', () => {

    const functionToBind = 'testFunction';

    container
      .register(testTypeKey, TestType)
      .bindFunctions('testFunction');

    const registration = container.getRegistration(testTypeKey);
    const bindFunctionsSetting = registration.settings.functionsToBind;

    should(bindFunctionsSetting).be.an.Array();
    should(bindFunctionsSetting.length).be.equal(1);
    should(bindFunctionsSetting[0]).be.equal(functionToBind);
  });
});
