import { BpmnType, EventType } from '../constants';
import { Event, LinkEventDefinition, MessageEventDefinition, SignalEventDefinition } from './event_base';
/**
 * Describes a BPMN IntermediateThrowEvent.
 *
 * These are used to raise events during ProcessModel execution.
 */
export declare class IntermediateThrowEvent extends Event {
    get bpmnType(): BpmnType;
    get eventType(): EventType;
    /**
     * When using an IntermediateLinkThrowEvent, this will contain the link that
     * gets called.
     */
    linkEventDefinition?: LinkEventDefinition;
    /**
     * When using an IntermediateMessageThrowEvent, this will contain the message
     * to throw.
     */
    messageEventDefinition?: MessageEventDefinition;
    /**
     * When using an IntermediateSignalThrowEvent, this will contain the signal
     * to throw.
     */
    signalEventDefinition?: SignalEventDefinition;
    /**
     * When sending messages or signals, this property can hold a
     * definition for a payload to send with the event.
     *
     * Use this, if you do not want to use the current ProcessToken as event
     * payload.
     */
    inputValues?: any;
}
