import { BpmnType } from '../constants';
import { Activity } from './activity';
/**
 * Describes a BPMN CallActivity.
 *
 * CallActivities also describe a type of subprocess, except that the process
 * is not contained within the parent process, but is located somewhere else.
 *
 * This means that the process called by the CallActivity can also run by itself,
 * unlike the subprocess contained within the 'SubProcess' Activity.
 */
export declare class CallActivity extends Activity {
    get bpmnType(): BpmnType;
    type: CallActivityType;
    calledReference?: string;
    /**
     * Optional: The ID of the StartEvent with which to call the CallActivity.
     * If no ID is provided, the first found StartEventID is used.
     */
    startEventId?: string;
    /**
     * Optional: The payload with which to start the CallActivity.
     * If not provided, the current token is used as a payload.
     */
    payload?: any;
    bindingType: CallActivityBindingType;
    calledElementVersion?: string;
    calledElementTenantId: string;
    delegateVariableMapping: CallActivityDelegateVariableMapping;
    variableMappingValue?: string;
}
/**
 * Contains all types of CallActivities.
 * Currently only 'BPMN' is supported.
 */
export declare enum CallActivityType {
    Unspecified = 0,
    BPMN = 1
}
/**
 * Contains all possible types of binding that can be used with a CallActivity.
 */
export declare enum CallActivityBindingType {
    latest = 0,
    deployment = 1,
    version = 2
}
/**
 * Determines the type of mapping used by the CallActivity, when passing on its
 * parameters to the called process.
 */
export declare enum CallActivityDelegateVariableMapping {
    Unspecified = 0,
    variableMappingClass = 1,
    variableMappingDelegateExpression = 2
}
