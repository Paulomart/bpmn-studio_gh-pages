define(["require", "exports", "@essential-projects/http_node", "@process-engine/management_api_contracts", "async-middleware", "../../middlewares/resolve_identity"], function (require, exports, http_node_1, management_api_contracts_1, async_middleware_1, resolve_identity_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    class LoggingRouter extends http_node_1.BaseRouter {
        constructor(loggingController, identityService) {
            super();
            this.loggingController = loggingController;
            this.identityService = identityService;
        }
        get baseRoute() {
            return 'api/management/v1';
        }
        async initializeRouter() {
            this.registerMiddlewares();
            this.registerRoutes();
        }
        registerMiddlewares() {
            const resolveIdentity = resolve_identity_1.createResolveIdentityMiddleware(this.identityService);
            this.router.use(async_middleware_1.wrap(resolveIdentity));
        }
        registerRoutes() {
            const controller = this.loggingController;
            this.router.get(management_api_contracts_1.restSettings.paths.getProcessModelLog, async_middleware_1.wrap(controller.getProcessModelLog.bind(controller)));
            this.router.get(management_api_contracts_1.restSettings.paths.getProcessInstanceLog, async_middleware_1.wrap(controller.getProcessInstanceLog.bind(controller)));
        }
    }
    exports.LoggingRouter = LoggingRouter;
});
//# sourceMappingURL=logging_router.js.map