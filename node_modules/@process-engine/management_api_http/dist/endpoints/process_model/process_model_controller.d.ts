import { HttpRequestWithIdentity } from '@essential-projects/http_contracts';
import { APIs, HttpController } from '@process-engine/management_api_contracts';
import { Response } from 'express';
export declare class ProcessModelController implements HttpController.IProcessModelHttpController {
    private httpCodeSuccessfulResponse;
    private httpCodeSuccessfulNoContentResponse;
    private processModelService;
    constructor(processModelService: APIs.IProcessModelManagementApi);
    getProcessModels(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    getProcessModelById(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    getProcessModelByProcessInstanceId(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    getStartEventsForProcessModel(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    startProcessInstance(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    updateProcessDefinitionsByName(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    deleteProcessDefinitionsByProcessModelId(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    terminateProcessInstance(request: HttpRequestWithIdentity, response: Response): Promise<void>;
}
