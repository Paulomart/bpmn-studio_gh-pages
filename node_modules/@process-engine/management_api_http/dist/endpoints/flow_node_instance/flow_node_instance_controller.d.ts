import { HttpRequestWithIdentity } from '@essential-projects/http_contracts';
import { APIs, HttpController } from '@process-engine/management_api_contracts';
import { Response } from 'express';
export declare class FlowNodeInstanceController implements HttpController.IFlowNodeInstanceHttpController {
    private httpCodeSuccessfulResponse;
    private flowNodeInstanceService;
    constructor(flowNodeInstanceService: APIs.IFlowNodeInstanceManagementApi);
    getFlowNodeInstancesForProcessInstance(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    getAllSuspendedTasks(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    getSuspendedTasksForProcessModel(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    getSuspendedTasksForProcessInstance(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    getSuspendedTasksForCorrelation(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    getSuspendedTasksForProcessModelInCorrelation(request: HttpRequestWithIdentity, response: Response): Promise<void>;
}
