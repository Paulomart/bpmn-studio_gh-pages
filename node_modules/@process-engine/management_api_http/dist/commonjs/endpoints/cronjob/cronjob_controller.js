"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class CronjobController {
    constructor(cronjobService) {
        this.httpCodeSuccessfulResponse = 200;
        this.cronjobService = cronjobService;
    }
    async getAllActiveCronjobs(request, response) {
        const identity = request.identity;
        const offset = request.query.offset || 0;
        const limit = request.query.limit || 0;
        const result = await this.cronjobService.getAllActiveCronjobs(identity, offset, limit);
        response.status(this.httpCodeSuccessfulResponse).json(result);
    }
    async getCronjobExecutionHistoryForProcessModel(request, response) {
        const identity = request.identity;
        const processModelId = request.params.process_model_id;
        const startEventId = request.query.start_event_id;
        const offset = request.query.offset || 0;
        const limit = request.query.limit || 0;
        const result = await this.cronjobService.getCronjobExecutionHistoryForProcessModel(identity, processModelId, startEventId, offset, limit);
        response.status(this.httpCodeSuccessfulResponse).json(result);
    }
    async getCronjobExecutionHistoryForCrontab(request, response) {
        const identity = request.identity;
        const crontab = request.params.crontab;
        const offset = request.query.offset || 0;
        const limit = request.query.limit || 0;
        const result = await this.cronjobService.getCronjobExecutionHistoryForCrontab(identity, crontab, offset, limit);
        response.status(this.httpCodeSuccessfulResponse).json(result);
    }
}
exports.CronjobController = CronjobController;
//# sourceMappingURL=cronjob_controller.js.map