import { ILoggingApi, ILoggingRepository, LogEntry, LogLevel, MetricMeasurementPoint } from '@process-engine/logging_api_contracts';
import { IIAMService, IIdentity } from '@essential-projects/iam_contracts';
export declare class LoggingApiService implements ILoggingApi {
    private iamService;
    private loggingRepository;
    constructor(iamService: IIAMService, loggingRepository: ILoggingRepository);
    readLogForProcessModel(identity: IIdentity, processModelId: string): Promise<Array<LogEntry>>;
    writeLogForProcessModel(correlationId: string, processModelId: string, processInstanceId: string, logLevel: LogLevel, measuredAt: MetricMeasurementPoint, message?: string, timestamp?: Date, error?: Error): Promise<void>;
    writeLogForFlowNode(correlationId: string, processModelId: string, processInstanceId: string, flowNodeInstanceId: string, flowNodeId: string, logLevel: LogLevel, measuredAt: MetricMeasurementPoint, tokenPayload: any, message?: string, timestamp?: Date, error?: Error): Promise<void>;
    archiveProcessModelLogs(identity: IIdentity, processModelId: string): Promise<void>;
}
