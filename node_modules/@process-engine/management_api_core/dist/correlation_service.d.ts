import { IIdentity } from '@essential-projects/iam_contracts';
import { APIs, DataModels } from '@process-engine/management_api_contracts';
import { ICorrelationService } from '@process-engine/persistence_api.contracts';
export declare class CorrelationService implements APIs.ICorrelationManagementApi {
    private readonly correlationService;
    constructor(correlationService: ICorrelationService);
    getAllCorrelations(identity: IIdentity, offset?: number, limit?: number): Promise<DataModels.Correlations.CorrelationList>;
    getActiveCorrelations(identity: IIdentity, offset?: number, limit?: number): Promise<DataModels.Correlations.CorrelationList>;
    getCorrelationById(identity: IIdentity, correlationId: string): Promise<DataModels.Correlations.Correlation>;
    getCorrelationsByProcessModelId(identity: IIdentity, processModelId: string, offset?: number, limit?: number): Promise<DataModels.Correlations.CorrelationList>;
    getProcessInstanceById(identity: IIdentity, processInstanceId: string): Promise<DataModels.Correlations.ProcessInstance>;
    getProcessInstancesForCorrelation(identity: IIdentity, correlationId: string, offset?: number, limit?: number): Promise<DataModels.Correlations.ProcessInstanceList>;
    getProcessInstancesForProcessModel(identity: IIdentity, processModelId: string, offset?: number, limit?: number): Promise<DataModels.Correlations.ProcessInstanceList>;
    getProcessInstancesByState(identity: IIdentity, state: DataModels.Correlations.CorrelationState, offset?: number, limit?: number): Promise<DataModels.Correlations.ProcessInstanceList>;
    private mapToPublicCorrelation;
    private mapToPublicProcessInstance;
}
