import { BpmnType } from '../constants';
import { Activity } from './activity';
/**
 * Describes a BPMN UserTask.
 *
 * A user task will hold the current execution of the process and wait for user input
 * before continuing.
 */
export declare class UserTask extends Activity {
    get bpmnType(): BpmnType;
    preferredControl?: string;
    assignee: string;
    candidateUsers: string;
    candidateGroups: string;
    dueDate?: Date;
    followUpDate?: Date;
    formFields: Array<UserTaskFormField>;
    description: string;
    finishedMessage: string;
}
/**
 * Describes a BPMN FormField.
 * A FormField is part of a UserTask and can contain all kinds of values.
 *
 * These values can then be used to finish the UserTask.
 */
export declare class UserTaskFormField {
    /**
     * The UserTasks unique identifier.
     */
    id: string;
    /**
     * The UserTasks label.
     * This is the field that will be used to describe the FormField,
     * when the UserTask is reached during ProcessModel execution.
     */
    label: string;
    /**
     * The type of the FormField.
     * Can be virtually anything; string, boolean, number, or enum.
     */
    type: string;
    /**
     * The default value of the FormField.
     */
    defaultValue: string;
    /**
     * If the type of the FormField is set to 'enum',
     * this will contain all possible enum values.
     */
    enumValues?: Array<FormFieldEnumValue>;
    /**
     * Determines the preferred type of control to use with the FormField.
     * For instance, when using string, this will most likely be 'TextBox', or
     * something similar.
     */
    preferredControl?: string;
}
/**
 * Used in combination with 'enum' type UserTask FormFields,
 * this describes a single enum value of that FormField.
 */
export declare class FormFieldEnumValue {
    id: string;
    name: string;
}
