define(["require", "exports", "../constants", "./event_base"], function (require, exports, constants_1, event_base_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Describes a BPMN IntermediateThrowEvent.
     *
     * These are used to wait for events during ProcessModel execution.
     *
     * The only exception is the IntermediateTimerCatchEvent, which is used to halt
     * the execution for a given amount of time.
     */
    class IntermediateCatchEvent extends event_base_1.Event {
        get bpmnType() {
            return constants_1.BpmnType.intermediateCatchEvent;
        }
        get eventType() {
            const eventIsMessageEvent = this.messageEventDefinition !== undefined;
            if (eventIsMessageEvent) {
                return constants_1.EventType.messageEvent;
            }
            const eventIsSignalEvent = this.signalEventDefinition !== undefined;
            if (eventIsSignalEvent) {
                return constants_1.EventType.signalEvent;
            }
            const eventIsTimerEvent = this.timerEventDefinition !== undefined;
            if (eventIsTimerEvent) {
                return constants_1.EventType.timerEvent;
            }
            const eventIsLinkEvent = this.linkEventDefinition !== undefined;
            if (eventIsLinkEvent) {
                return constants_1.EventType.linkEvent;
            }
            return undefined;
        }
    }
    exports.IntermediateCatchEvent = IntermediateCatchEvent;
});
//# sourceMappingURL=intermediate_catch_event.js.map