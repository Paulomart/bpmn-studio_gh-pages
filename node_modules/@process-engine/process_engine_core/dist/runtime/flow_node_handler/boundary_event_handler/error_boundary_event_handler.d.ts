import { FlowNodeInstance, ProcessToken } from '@process-engine/persistence_api.contracts';
import { BpmnError, IProcessModelFacade, IProcessTokenFacade, OnBoundaryEventTriggeredCallback } from '@process-engine/process_engine_contracts';
import { BoundaryEventHandler } from './boundary_event_handler';
export declare class ErrorBoundaryEventHandler extends BoundaryEventHandler {
    /**
     * Checks if the name of the given error is equal to the one attached
     * to the BoundaryEvent model.
     *
     * If no error is attached to the model, then this handler can also handle
     * the error.
     *
     * @param   error The error to compare against the errorEventDefinition of
     *                the model.
     * @param token    Contains all the information required for the notification message.
     * @returns       True, if the BoundaryEvent can handle the given error.
     *                Otherwise false.
     */
    canHandleError(error: BpmnError, token: ProcessToken): boolean;
    waitForTriggeringEvent(onTriggeredCallback: OnBoundaryEventTriggeredCallback, token: ProcessToken, processTokenFacade: IProcessTokenFacade, processModelFacade: IProcessModelFacade, attachedFlowNodeInstanceId: string): Promise<void>;
    resumeWait(boundaryEventInstance: FlowNodeInstance, onTriggeredCallback: OnBoundaryEventTriggeredCallback, token: ProcessToken, processTokenFacade: IProcessTokenFacade, processModelFacade: IProcessModelFacade, attachedFlowNodeInstanceId: string): Promise<void>;
    private checkIfErrorMatches;
}
