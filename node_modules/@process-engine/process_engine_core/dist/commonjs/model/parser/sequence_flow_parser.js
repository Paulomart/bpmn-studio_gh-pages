"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const persistence_api_contracts_1 = require("@process-engine/persistence_api.contracts");
const type_factory_1 = require("../type_factory");
function parseProcessSequenceFlows(data) {
    const sequenceFlowsRaw = type_factory_1.getModelPropertyAsArray(data, persistence_api_contracts_1.BpmnTags.OtherElements.SequenceFlow);
    if (!sequenceFlowsRaw) {
        return [];
    }
    const sequenceFlows = [];
    for (const sequenceFlowRaw of sequenceFlowsRaw) {
        const sequenceFlow = type_factory_1.createObjectWithCommonProperties(sequenceFlowRaw, persistence_api_contracts_1.Model.ProcessElements.SequenceFlow);
        sequenceFlow.name = sequenceFlowRaw.name;
        sequenceFlow.sourceRef = sequenceFlowRaw.sourceRef;
        sequenceFlow.targetRef = sequenceFlowRaw.targetRef;
        if (sequenceFlowRaw[persistence_api_contracts_1.BpmnTags.FlowElementProperty.ConditionExpression]) {
            const conditionData = sequenceFlowRaw[persistence_api_contracts_1.BpmnTags.FlowElementProperty.ConditionExpression];
            sequenceFlow.conditionExpression = {
                type: conditionData[persistence_api_contracts_1.BpmnTags.FlowElementProperty.XsiType],
                expression: conditionData._,
            };
        }
        sequenceFlows.push(sequenceFlow);
    }
    return sequenceFlows;
}
exports.parseProcessSequenceFlows = parseProcessSequenceFlows;
//# sourceMappingURL=sequence_flow_parser.js.map