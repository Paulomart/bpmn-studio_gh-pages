import { HttpRequestWithIdentity } from '@essential-projects/http_contracts';
import { APIs, HttpController } from '@process-engine/consumer_api_contracts';
import { Response } from 'express';
export declare class ExternalTaskController implements HttpController.IExternalTaskHttpController {
    private httpCodeSuccessfulResponse;
    private httpCodeSuccessfulNoContentResponse;
    private externalTaskService;
    constructor(externalTaskService: APIs.IExternalTaskConsumerApi);
    fetchAndLockExternalTasks(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    extendLock(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    handleBpmnError(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    handleServiceError(request: HttpRequestWithIdentity, response: Response): Promise<void>;
    finishExternalTask(request: HttpRequestWithIdentity, response: Response): Promise<void>;
}
