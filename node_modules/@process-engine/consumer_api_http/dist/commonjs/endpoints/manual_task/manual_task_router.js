"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const http_node_1 = require("@essential-projects/http_node");
const consumer_api_contracts_1 = require("@process-engine/consumer_api_contracts");
const async_middleware_1 = require("async-middleware");
const resolve_identity_1 = require("../../middlewares/resolve_identity");
class ManualTaskRouter extends http_node_1.BaseRouter {
    constructor(manualTaskController, identityService) {
        super();
        this.manualTaskController = manualTaskController;
        this.identityService = identityService;
    }
    get baseRoute() {
        return 'api/consumer/v1';
    }
    async initializeRouter() {
        this.registerMiddlewares();
        this.registerRoutes();
    }
    registerMiddlewares() {
        const resolveIdentity = resolve_identity_1.createResolveIdentityMiddleware(this.identityService);
        this.router.use(async_middleware_1.wrap(resolveIdentity));
    }
    registerRoutes() {
        const controller = this.manualTaskController;
        this.router.get(consumer_api_contracts_1.restSettings.paths.processModelManualTasks, async_middleware_1.wrap(controller.getManualTasksForProcessModel.bind(controller)));
        this.router.get(consumer_api_contracts_1.restSettings.paths.processInstanceManualTasks, async_middleware_1.wrap(controller.getManualTasksForProcessInstance.bind(controller)));
        this.router.get(consumer_api_contracts_1.restSettings.paths.correlationManualTasks, async_middleware_1.wrap(controller.getManualTasksForCorrelation.bind(controller)));
        this.router.get(consumer_api_contracts_1.restSettings.paths.processModelCorrelationManualTasks, async_middleware_1.wrap(controller.getManualTasksForProcessModelInCorrelation.bind(controller)));
        this.router.get(consumer_api_contracts_1.restSettings.paths.getOwnManualTasks, async_middleware_1.wrap(controller.getWaitingManualTasksByIdentity.bind(controller)));
        this.router.post(consumer_api_contracts_1.restSettings.paths.finishManualTask, async_middleware_1.wrap(controller.finishManualTask.bind(controller)));
    }
}
exports.ManualTaskRouter = ManualTaskRouter;
//# sourceMappingURL=manual_task_router.js.map