define(["require", "exports", "@essential-projects/http_node", "@process-engine/consumer_api_contracts", "async-middleware", "../../middlewares/resolve_identity"], function (require, exports, http_node_1, consumer_api_contracts_1, async_middleware_1, resolve_identity_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    class EventRouter extends http_node_1.BaseRouter {
        constructor(eventController, identityService) {
            super();
            this.eventController = eventController;
            this.identityService = identityService;
        }
        get baseRoute() {
            return 'api/consumer/v1';
        }
        async initializeRouter() {
            this.registerMiddlewares();
            this.registerRoutes();
        }
        registerMiddlewares() {
            const resolveIdentity = resolve_identity_1.createResolveIdentityMiddleware(this.identityService);
            this.router.use(async_middleware_1.wrap(resolveIdentity));
        }
        registerRoutes() {
            const controller = this.eventController;
            this.router.get(consumer_api_contracts_1.restSettings.paths.processModelEvents, async_middleware_1.wrap(controller.getEventsForProcessModel.bind(controller)));
            this.router.get(consumer_api_contracts_1.restSettings.paths.correlationEvents, async_middleware_1.wrap(controller.getEventsForCorrelation.bind(controller)));
            this.router.get(consumer_api_contracts_1.restSettings.paths.processModelCorrelationEvents, async_middleware_1.wrap(controller.getEventsForProcessModelInCorrelation.bind(controller)));
            this.router.post(consumer_api_contracts_1.restSettings.paths.triggerMessageEvent, async_middleware_1.wrap(controller.triggerMessageEvent.bind(controller)));
            this.router.post(consumer_api_contracts_1.restSettings.paths.triggerSignalEvent, async_middleware_1.wrap(controller.triggerSignalEvent.bind(controller)));
        }
    }
    exports.EventRouter = EventRouter;
});
//# sourceMappingURL=event_router.js.map