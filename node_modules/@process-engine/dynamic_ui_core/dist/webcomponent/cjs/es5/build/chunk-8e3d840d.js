"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var dynamic_task_components_core_js_1 = require("../dynamic-task-components.core.js");
var chunk_d8a0f336_js_1 = require("./chunk-d8a0f336.js");
var DateInputValidator = function () { function e() { } return e.prototype.validateKey = function (e) { var t = e.keyCode === chunk_d8a0f336_js_1.a.ENTER, n = e.keyCode === chunk_d8a0f336_js_1.a.BACKSPACE, r = 2 === e.target.value.length || 5 === e.target.value.length, i = this.isCopyAndPastePressed(e), o = this.isKeyValid(e, n, i); if (e.keyCode === chunk_d8a0f336_js_1.a.TAB)
    return !0; if (t)
    return this.isValidDate(e.target.value); if (r) {
    if (n)
        return !0;
    e.target.value = e.target.value.concat(".");
} return o; }, e.prototype.isValidDate = function (e) { var t = parseInt(e.substring(6, 10)), n = parseInt(e.substring(3, 5)), r = parseInt(e.substring(0, 2)); return this.isDayInMonth(r, n, t); }, e.prototype.isDayInMonth = function (e, t, n) { return e <= new Date(n, t, 0).getDate(); }, e.prototype.isCopyAndPastePressed = function (e) { return (e.keyCode === chunk_d8a0f336_js_1.a.C || e.keyCode === chunk_d8a0f336_js_1.a.V) && (e.ctrlKey || e.metaKey); }, e.prototype.isKeyValid = function (e, t, n) { return e.keyCode <= chunk_d8a0f336_js_1.a.NINE && e.keyCode >= chunk_d8a0f336_js_1.a.ZERO || t || n; }, e; }(), DateFormField = function () { function e() { this.isValid = !0, this.validationRegex = "^(0?[1-9]|[12][0-9]|3[01])([ \\.])(0?[1-9]|1[012])\\2([0-9][0-9][0-9][0-9])(([ -])([0-1]?[0-9]|2[0-3]):[0-5]?[0-9]:[0-5]?[0-9])?$", this._inputValidator = new DateInputValidator; } return Object.defineProperty(e.prototype, "name", { get: function () { return this.formField.id; }, enumerable: !0, configurable: !0 }), e.prototype.componentWillLoad = function () { this.value = this.formField.defaultValue; }, e.prototype.render = function () { var e = this; return dynamic_task_components_core_js_1.h("div", { class: "form-group" }, dynamic_task_components_core_js_1.h("label", { htmlFor: this.formField.id }, this.formField.label), dynamic_task_components_core_js_1.h("input", { type: "text", "data-provide": "datepicker", class: "form-control", maxlength: "10", placeholder: "--.--.----", pattern: this.validationRegex, id: this.formField.id, value: this.value, onChange: function (t) { return e._handleChange(t); }, onKeyDown: function (t) { return e._handleKeyDown(t); } })); }, e.prototype._handleChange = function (e) { this.value = e.target.value, this.isValid = this._inputValidator.isValidDate(e.target.value), this._setStyle(e); }, e.prototype._setStyle = function (e) { var t = 0 === e.target.value.length; document.getElementById(this.formField.id).style.borderColor = this.isValid || t ? "" : "red", t && (this.isValid = !0); }, e.prototype._handleKeyDown = function (e) { this._inputValidator.validateKey(e) || e.preventDefault(); }, Object.defineProperty(e, "is", { get: function () { return "date-form-field"; }, enumerable: !0, configurable: !0 }), Object.defineProperty(e, "encapsulation", { get: function () { return "shadow"; }, enumerable: !0, configurable: !0 }), Object.defineProperty(e, "properties", { get: function () { return { value: { state: !0 } }; }, enumerable: !0, configurable: !0 }), Object.defineProperty(e, "style", { get: function () { return "/**style-placeholder:date-form-field:**/"; }, enumerable: !0, configurable: !0 }), e; }();
exports.a = DateFormField;
