"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const compareVersions = require("compare-versions");
const PRE_VERSION_REGEX = /-/;
function previousStableVersion(currentVersionTag, gitTagList) {
    const currentVersion = currentVersionTag.replace(/^v/, '');
    const allVersions = getSortedListOfAllVersions(gitTagList);
    const stableVersions = removePreVersions(allVersions);
    const stableVersionsAndCurrentVersion = stableVersions.concat(currentVersion).sort(compareVersions);
    const index = stableVersionsAndCurrentVersion.findIndex((version) => version === currentVersion);
    const previousIndex = index - 1;
    if (previousIndex < 0) {
        return null;
    }
    return stableVersionsAndCurrentVersion[previousIndex];
}
exports.previousStableVersion = previousStableVersion;
function getSortedListOfAllVersions(gitTagList) {
    const versions = gitTagList
        .split('\n')
        .map((versionTag) => {
        const version = versionTag.replace(/^v/, '');
        try {
            compareVersions(version, '1.0.0');
            return version;
        }
        catch (e) {
            return null;
        }
    })
        .filter((version) => version != null);
    return versions.sort(compareVersions);
}
exports.getSortedListOfAllVersions = getSortedListOfAllVersions;
function removePreVersions(versions) {
    return versions.filter((version) => !version.match(PRE_VERSION_REGEX));
}
//# sourceMappingURL=previous_stable_version.js.map