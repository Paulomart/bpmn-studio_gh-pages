import { SequelizeOptions } from 'sequelize-typescript';
import { IDisposable } from '@essential-projects/bootstrapper_contracts';
import { SequelizeConnectionManager } from '@essential-projects/sequelize_connection_manager';
import { Cronjob, ICronjobHistoryRepository } from '@process-engine/persistence_api.contracts';
export declare class CronjobHistoryRepository implements ICronjobHistoryRepository, IDisposable {
    config: SequelizeOptions;
    private sequelizeInstance;
    private connectionManager;
    constructor(connectionManager: SequelizeConnectionManager);
    initialize(): Promise<void>;
    dispose(): Promise<void>;
    create(cronjob: Cronjob): Promise<void>;
    getAll(offset?: number, limit?: number): Promise<Array<Cronjob>>;
    getByProcessModelId(processModelId: string, startEventId?: string, offset?: number, limit?: number): Promise<Array<Cronjob>>;
    getByCrontab(crontab: string, offset?: number, limit?: number): Promise<Array<Cronjob>>;
    private convertToCronjobRuntimeObject;
    private buildPagination;
}
