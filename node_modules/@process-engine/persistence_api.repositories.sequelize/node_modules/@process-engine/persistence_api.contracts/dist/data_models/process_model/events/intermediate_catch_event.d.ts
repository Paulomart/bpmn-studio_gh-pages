import { BpmnType, EventType } from '../constants';
import { Event, LinkEventDefinition, MessageEventDefinition, SignalEventDefinition, TimerEventDefinition } from './event_base';
/**
 * Describes a BPMN IntermediateThrowEvent.
 *
 * These are used to wait for events during ProcessModel execution.
 *
 * The only exception is the IntermediateTimerCatchEvent, which is used to halt
 * the execution for a given amount of time.
 */
export declare class IntermediateCatchEvent extends Event {
    get bpmnType(): BpmnType;
    get eventType(): EventType;
    /**
     * When using an IntermediateLinkCatchEvent, this will contain the link by
     * which to access this event.
     */
    linkEventDefinition?: LinkEventDefinition;
    /**
     * When using an IntermediateMessageCatchEvent, this will contain the message
     * to wait for.
     */
    messageEventDefinition?: MessageEventDefinition;
    /**
     * When using an IntermediateSignalCatchEvent, this will contain the signal
     * to wait for.
     */
    signalEventDefinition?: SignalEventDefinition;
    /**
     * When using an IntermediateTimerCatchEvent, this will contain the definiton
     * of the timer that is used to pause the execution.
     */
    timerEventDefinition?: TimerEventDefinition;
}
