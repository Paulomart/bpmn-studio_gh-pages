"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("../constants");
const activity_1 = require("./activity");
/**
 * Describes a BPMN CallActivity.
 *
 * CallActivities also describe a type of subprocess, except that the process
 * is not contained within the parent process, but is located somewhere else.
 *
 * This means that the process called by the CallActivity can also run by itself,
 * unlike the subprocess contained within the 'SubProcess' Activity.
 */
class CallActivity extends activity_1.Activity {
    constructor() {
        super(...arguments);
        this.type = CallActivityType.Unspecified;
        this.bindingType = CallActivityBindingType.deployment;
        this.delegateVariableMapping = CallActivityDelegateVariableMapping.Unspecified;
    }
    get bpmnType() {
        return constants_1.BpmnType.callActivity;
    }
}
exports.CallActivity = CallActivity;
/**
 * Contains all types of CallActivities.
 * Currently only 'BPMN' is supported.
 */
var CallActivityType;
(function (CallActivityType) {
    CallActivityType[CallActivityType["Unspecified"] = 0] = "Unspecified";
    CallActivityType[CallActivityType["BPMN"] = 1] = "BPMN";
    // CMMN = 2, - Not supported yet
})(CallActivityType = exports.CallActivityType || (exports.CallActivityType = {}));
/**
 * Contains all possible types of binding that can be used with a CallActivity.
 */
var CallActivityBindingType;
(function (CallActivityBindingType) {
    CallActivityBindingType[CallActivityBindingType["latest"] = 0] = "latest";
    CallActivityBindingType[CallActivityBindingType["deployment"] = 1] = "deployment";
    CallActivityBindingType[CallActivityBindingType["version"] = 2] = "version";
})(CallActivityBindingType = exports.CallActivityBindingType || (exports.CallActivityBindingType = {}));
/**
 * Determines the type of mapping used by the CallActivity, when passing on its
 * parameters to the called process.
 */
var CallActivityDelegateVariableMapping;
(function (CallActivityDelegateVariableMapping) {
    CallActivityDelegateVariableMapping[CallActivityDelegateVariableMapping["Unspecified"] = 0] = "Unspecified";
    CallActivityDelegateVariableMapping[CallActivityDelegateVariableMapping["variableMappingClass"] = 1] = "variableMappingClass";
    CallActivityDelegateVariableMapping[CallActivityDelegateVariableMapping["variableMappingDelegateExpression"] = 2] = "variableMappingDelegateExpression";
})(CallActivityDelegateVariableMapping = exports.CallActivityDelegateVariableMapping || (exports.CallActivityDelegateVariableMapping = {}));
//# sourceMappingURL=call_activity.js.map