define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const superAdminClaim = 'can_manage_process_instances';
    const canReadCronjobHistoryClaim = 'can_read_cronjob_history';
    class CronjobHistoryService {
        constructor(cronjobHistoryRepository, iamService) {
            this.cronjobHistoryRepository = cronjobHistoryRepository;
            this.iamService = iamService;
        }
        async create(identity, cronjob) {
            await this.ensureUserHasClaim(identity, canReadCronjobHistoryClaim);
            return this.cronjobHistoryRepository.create(cronjob);
        }
        async getAll(identity, offset = 0, limit = 0) {
            await this.ensureUserHasClaim(identity, canReadCronjobHistoryClaim);
            return this.cronjobHistoryRepository.getAll(offset, limit);
        }
        async getByProcessModelId(identity, processModelId, startEventId, offset = 0, limit = 0) {
            await this.ensureUserHasClaim(identity, canReadCronjobHistoryClaim);
            return this.cronjobHistoryRepository.getByProcessModelId(processModelId, startEventId, offset, limit);
        }
        async getByCrontab(identity, crontab, offset = 0, limit = 0) {
            await this.ensureUserHasClaim(identity, canReadCronjobHistoryClaim);
            return this.cronjobHistoryRepository.getByCrontab(crontab, offset, limit);
        }
        async ensureUserHasClaim(identity, claimName) {
            const userIsSuperAdmin = await this.checkIfUserIsSuperAdmin(identity);
            if (userIsSuperAdmin) {
                return;
            }
            await this.iamService.ensureHasClaim(identity, claimName);
        }
        async checkIfUserIsSuperAdmin(identity) {
            try {
                await this.iamService.ensureHasClaim(identity, superAdminClaim);
                return true;
            }
            catch (error) {
                return false;
            }
        }
    }
    exports.CronjobHistoryService = CronjobHistoryService;
});
//# sourceMappingURL=cronjob_history_service.js.map