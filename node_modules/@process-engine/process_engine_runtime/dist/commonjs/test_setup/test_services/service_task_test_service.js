"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const loggerhythm_1 = require("loggerhythm");
const logger = loggerhythm_1.Logger.createLogger('service_task:service_task_test_bnservice');
class ServiceTaskTestService {
    async returnOne() {
        logger.info('Starting Service: Return One.');
        return 1;
    }
    async returnObject() {
        logger.info('Starting Service: Return Object');
        return {
            prop1: 1337,
            prop2: 'Hello World',
        };
    }
    async echoParameter(message) {
        logger.info('Starting Service: Echo Parameter');
        return message;
    }
    async addNumbers(firstNumber, secondNumber) {
        logger.info('Starting Service: Add Numbers');
        return firstNumber + secondNumber;
    }
    async throwException() {
        logger.info('Starting Service: Throw Exception');
        throw new Error('Failed');
    }
    async delay(timeInSeconds, valueToReturn) {
        logger.info('Starting Service: Delay');
        logger.info(`Waiting ${timeInSeconds} seconds.`);
        const millisecondsToWait = timeInSeconds * 1000;
        await new Promise((resolve) => {
            setTimeout(() => {
                logger.info('Timeout over');
                resolve();
            }, millisecondsToWait);
        });
        return valueToReturn;
    }
}
exports.ServiceTaskTestService = ServiceTaskTestService;
//# sourceMappingURL=service_task_test_service.js.map