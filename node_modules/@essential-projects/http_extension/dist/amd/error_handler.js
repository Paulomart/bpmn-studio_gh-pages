define(["require", "exports", "@essential-projects/errors_ts", "loggerhythm"], function (require, exports, errors_ts_1, loggerhythm_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const logger = loggerhythm_1.Logger
        .createLogger('http_extension')
        .createChildLogger('error_handler');
    // NOTE: The function signature must be exact, or express will not recognize it as an error handler
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    function errorHandler(error, request, response, next) {
        const isFromEssentialProjects = errors_ts_1.isEssentialProjectsError(error);
        const statusCode = isFromEssentialProjects
            ? error.code
            : errors_ts_1.ErrorCodes.InternalServerError;
        let responseMessage;
        if (isFromEssentialProjects) {
            responseMessage = JSON.stringify({ message: error.message, additionalInformation: error.additionalInformation });
        }
        else {
            const expectJsonAsResponse = request.headers['content-type'] === 'application/json';
            responseMessage = expectJsonAsResponse ? JSON.stringify({ message: error.message }) : error.message;
        }
        logger.info(`${statusCode}`, error);
        response
            .status(statusCode)
            .send(responseMessage);
    }
    exports.errorHandler = errorHandler;
});
//# sourceMappingURL=error_handler.js.map