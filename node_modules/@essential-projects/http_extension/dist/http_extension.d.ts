/// <reference types="node" />
/// <reference types="socket.io" />
import { IContainer, IInstanceWrapper } from 'addict-ioc';
import * as express from 'express';
import * as http from 'http';
import { IHttpExtension } from '@essential-projects/http_contracts';
export declare class HttpExtension implements IHttpExtension {
    config: any;
    readonly app: express.Application;
    readonly httpServer: http.Server;
    private container;
    private _socketServer;
    private routers;
    private socketEndpoints;
    constructor(container: IContainer<IInstanceWrapper<unknown>>);
    get socketServer(): SocketIO.Server;
    initialize(): Promise<void>;
    start(): Promise<void>;
    close(): Promise<void>;
    protected initializeServer(): Promise<void> | void;
    protected initializeAppExtensions(): Promise<void> | void;
    protected initializeBaseMiddleware(): void;
    protected initializeMiddlewareBeforeRouters(): Promise<void> | void;
    protected initializeRouters(): Promise<void>;
    protected initializeMiddlewareAfterRouters(): Promise<void> | void;
    protected initializeSocketEndpoints(): Promise<void>;
    protected onStarted(): Promise<void> | void;
    private initializeRouter;
    private bindRoute;
    private initializeSocketEndpoint;
    private closeSockets;
    private closeHttpEndpoints;
}
