define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ErrorCodes;
    (function (ErrorCodes) {
        ErrorCodes[ErrorCodes["ContinueError"] = 100] = "ContinueError";
        ErrorCodes[ErrorCodes["SwitchingProtocolsError"] = 101] = "SwitchingProtocolsError";
        ErrorCodes[ErrorCodes["ProcessingError"] = 102] = "ProcessingError";
        // 300-redirect-errors
        ErrorCodes[ErrorCodes["MultipleChoicesError"] = 300] = "MultipleChoicesError";
        ErrorCodes[ErrorCodes["MovedError"] = 301] = "MovedError";
        ErrorCodes[ErrorCodes["FoundError"] = 302] = "FoundError";
        ErrorCodes[ErrorCodes["SeeOtherError"] = 303] = "SeeOtherError";
        ErrorCodes[ErrorCodes["NotModifiedError"] = 304] = "NotModifiedError";
        ErrorCodes[ErrorCodes["UseProxyError"] = 305] = "UseProxyError";
        ErrorCodes[ErrorCodes["TemporaryRedirectError"] = 307] = "TemporaryRedirectError";
        ErrorCodes[ErrorCodes["PermanentRedirectError"] = 308] = "PermanentRedirectError";
        // 400-client-errors
        ErrorCodes[ErrorCodes["BadRequestError"] = 400] = "BadRequestError";
        ErrorCodes[ErrorCodes["UnauthorizedError"] = 401] = "UnauthorizedError";
        ErrorCodes[ErrorCodes["PaymentRequiredError"] = 402] = "PaymentRequiredError";
        ErrorCodes[ErrorCodes["ForbiddenError"] = 403] = "ForbiddenError";
        ErrorCodes[ErrorCodes["NotFoundError"] = 404] = "NotFoundError";
        ErrorCodes[ErrorCodes["MethodNotAllowedError"] = 405] = "MethodNotAllowedError";
        ErrorCodes[ErrorCodes["NotAcceptableError"] = 406] = "NotAcceptableError";
        ErrorCodes[ErrorCodes["ProxyAuthenticationRequiredError"] = 407] = "ProxyAuthenticationRequiredError";
        ErrorCodes[ErrorCodes["RequestTimeoutError"] = 408] = "RequestTimeoutError";
        ErrorCodes[ErrorCodes["ConflictError"] = 409] = "ConflictError";
        ErrorCodes[ErrorCodes["GoneError"] = 410] = "GoneError";
        ErrorCodes[ErrorCodes["LengthRequiredError"] = 411] = "LengthRequiredError";
        ErrorCodes[ErrorCodes["PreconditionFailedError"] = 412] = "PreconditionFailedError";
        ErrorCodes[ErrorCodes["RequestTooLargeError"] = 413] = "RequestTooLargeError";
        ErrorCodes[ErrorCodes["URLTooLongError"] = 414] = "URLTooLongError";
        ErrorCodes[ErrorCodes["UnsupportedMediaTypeError"] = 415] = "UnsupportedMediaTypeError";
        ErrorCodes[ErrorCodes["RequestedRangeNotSatisfiableError"] = 416] = "RequestedRangeNotSatisfiableError";
        ErrorCodes[ErrorCodes["ExpectationFailedError"] = 417] = "ExpectationFailedError";
        ErrorCodes[ErrorCodes["ImATeapotError"] = 418] = "ImATeapotError";
        ErrorCodes[ErrorCodes["AuthenticationTimeoutError"] = 419] = "AuthenticationTimeoutError";
        ErrorCodes[ErrorCodes["PolicyNotFulfilledError"] = 420] = "PolicyNotFulfilledError";
        ErrorCodes[ErrorCodes["MisdirectedRequestError"] = 421] = "MisdirectedRequestError";
        ErrorCodes[ErrorCodes["UnprocessableEntityError"] = 422] = "UnprocessableEntityError";
        ErrorCodes[ErrorCodes["LockedError"] = 423] = "LockedError";
        ErrorCodes[ErrorCodes["FailedDependencyError"] = 424] = "FailedDependencyError";
        ErrorCodes[ErrorCodes["UpgradeRequiredError"] = 426] = "UpgradeRequiredError";
        ErrorCodes[ErrorCodes["PreconditionRequiredError"] = 428] = "PreconditionRequiredError";
        ErrorCodes[ErrorCodes["TooManyRequestsError"] = 429] = "TooManyRequestsError";
        ErrorCodes[ErrorCodes["RequestHeaderTooLargeError"] = 431] = "RequestHeaderTooLargeError";
        ErrorCodes[ErrorCodes["UnavaliableForLegalReasonsError"] = 451] = "UnavaliableForLegalReasonsError";
        // 500-server-errors
        ErrorCodes[ErrorCodes["InternalServerError"] = 500] = "InternalServerError";
        ErrorCodes[ErrorCodes["NotImplementedError"] = 501] = "NotImplementedError";
        ErrorCodes[ErrorCodes["BadGatewayError"] = 502] = "BadGatewayError";
        ErrorCodes[ErrorCodes["ServiceUnavaliableError"] = 503] = "ServiceUnavaliableError";
        ErrorCodes[ErrorCodes["GatewayTimeoutError"] = 504] = "GatewayTimeoutError";
        ErrorCodes[ErrorCodes["VersionNotSupportedError"] = 505] = "VersionNotSupportedError";
        ErrorCodes[ErrorCodes["InsufficientStorageError"] = 507] = "InsufficientStorageError";
        ErrorCodes[ErrorCodes["LoopDetectedError"] = 508] = "LoopDetectedError";
        ErrorCodes[ErrorCodes["BandwithLimitExceededError"] = 509] = "BandwithLimitExceededError";
        ErrorCodes[ErrorCodes["NetworkAuthenticationRequiredError"] = 511] = "NetworkAuthenticationRequiredError";
    })(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));
});
//# sourceMappingURL=error_codes.js.map